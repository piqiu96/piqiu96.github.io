<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>阿邱爷｜Blog</title>
        <link>http://example.org/</link>
        <description>这是我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yong_qiu_ch@163.com (皮邱)</managingEditor>
            <webMaster>yong_qiu_ch@163.com (皮邱)</webMaster><lastBuildDate>Wed, 05 Jan 2022 00:03:06 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>2021年度总结：接纳自己，永不服输</title>
    <link>http://example.org/summary2021/</link>
    <pubDate>Wed, 05 Jan 2022 00:03:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/summary2021/</guid>
    <description><![CDATA[一、回顾 当我准备写年度总结的时候，我大脑是空白的，感觉做了很多事情又感觉什么都没做，所以先回顾下今年都干了什么？ 1-2月：参与2021春节拜]]></description>
</item><item>
    <title>如何做系统稳定性？</title>
    <link>http://example.org/stable-system/</link>
    <pubDate>Tue, 04 Jan 2022 23:45:20 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/stable-system/</guid>
    <description><![CDATA[#如何做系统稳定性？ 一、稳定性定义 二、稳定性分析 三、稳定性思路 预防-发现-止损-定位-复盘 四、稳定性实践]]></description>
</item><item>
    <title>MySQL索引</title>
    <link>http://example.org/mysql-index/</link>
    <pubDate>Tue, 04 Jan 2022 23:33:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/mysql-index/</guid>
    <description><![CDATA[MySQL索引 一、索引结构 hash：读性能（等值查询高、范围查询低） 有序数组：读性能（等值查询高，范围查询高「二分」）、写性能（元素后移性能]]></description>
</item><item>
    <title>MySQL优化</title>
    <link>http://example.org/mysql-sqlbest/</link>
    <pubDate>Tue, 04 Jan 2022 23:32:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/mysql-sqlbest/</guid>
    <description><![CDATA[SQL优化 Sql执行顺序 (8) SELECT(9) DISTINCT column,… 选择字段 、去重 (6) AGG_FUNC(column or expression),… 聚合函数 (1) FROM [left_table] 选择表 (3) &lt;join_type&gt; JOIN &lt;right_table&gt; 链接 (2) ON &lt;join_condition&gt; 链接条件 (4)]]></description>
</item><item>
    <title>接口幂等设计</title>
    <link>http://example.org/%E6%8E%A5%E5%8F%A3%E5%B9%82%E7%AD%89%E8%AE%BE%E8%AE%A1/</link>
    <pubDate>Wed, 29 Dec 2021 15:13:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/%E6%8E%A5%E5%8F%A3%E5%B9%82%E7%AD%89%E8%AE%BE%E8%AE%A1/</guid>
    <description><![CDATA[幂等设计 一、背景 二、问题 三、思路]]></description>
</item><item>
    <title>Go环境搭建</title>
    <link>http://example.org/goenv/</link>
    <pubDate>Tue, 28 Dec 2021 15:13:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/goenv/</guid>
    <description><![CDATA[一、下载地址 https://golang.google.cn/dl/ 二、环境变量 1 2 3 4 5 6 7 8 9 10 11 // 设置环境变量内容 export GOHOME=/Users/qiuyong/Develop/dev_env/goenv export GOROOT=$GOHOME/go export GOPATH=$GOHOME/gopath export PATH=$PATH:$GOROOT/bin:$GOPATH/bin // 生效环境变量 source /home/work/.bash_profile // 检验 go env --json 三、配置环境 1 2 3 4 5 go env -w]]></description>
</item><item>
    <title>MySQL系统设计</title>
    <link>http://example.org/mysql-design/</link>
    <pubDate>Tue, 28 Dec 2021 15:13:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/mysql-design/</guid>
    <description><![CDATA[MySQL系统设计 一、设计要素 1.1、基础设计 根据业务模式，设计库表结构 根据访问模式，设计索引结构 1.2、拓展设计 读性能 高可用 数据一致性 垂直]]></description>
</item><item>
    <title>并发编程</title>
    <link>http://example.org/concurrent/</link>
    <pubDate>Tue, 28 Dec 2021 15:13:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/concurrent/</guid>
    <description><![CDATA[并发编程 一、基本原理 1、程序是怎么跑起来的？ 进程/线程 2、cpu的进化，软件跟着发展？ 速度比较：cpu读写、内存读写、磁盘读写 3、并发编程诞]]></description>
</item><item>
    <title>MySQL锁的实现原理</title>
    <link>http://example.org/mysql-lock/</link>
    <pubDate>Fri, 10 Dec 2021 00:11:38 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/mysql-lock/</guid>
    <description><![CDATA[一、锁类型 1.1、自增锁 An AUTO-INC lock is a special table-level lock taken by transactions inserting into tables with AUTO_INCREMENT columns. In the simplest case, if one transaction is inserting values into the table, any other transactions must wait to do their own inserts into that table, so that rows inserted by the first transaction receive consecutive primary key values. 自增]]></description>
</item><item>
    <title>MySQL事务实现原理</title>
    <link>http://example.org/mysql-transaction/</link>
    <pubDate>Thu, 09 Dec 2021 11:07:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/mysql-transaction/</guid>
    <description><![CDATA[MySQL事务原理 1、事务是什么？ 事务通常指的是逻辑上的一组操作，要么全部执行成功，要么全部执行失败。总体来说，他们具备ACID四大特性，分]]></description>
</item></channel>
</rss>
